name: Simple Auto Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/**'

jobs:
  simple-release:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: 📦 Restore and Build
      run: |
        dotnet restore ReturnOrderGenerator.csproj
        dotnet build ReturnOrderGenerator.csproj --configuration Release --no-restore

    - name: 🚀 Publish Application
      run: |
        dotnet publish ReturnOrderGenerator.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=false -o ./release

    - name: 📅 Generate Version and Package
      id: package
      run: |
        # 生成版本号
        $timestamp = Get-Date -Format "yyyyMMdd-HHmm"
        $shortSha = "${{ github.sha }}".Substring(0, 7)
        $version = "auto-$timestamp-$shortSha"
        
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Generated version: $version"
        
        # 创建发布包
        $packageName = "SF_P-$version-win-x64.zip"
        Compress-Archive -Path ./release/* -DestinationPath $packageName
        
        echo "package_name=$packageName" >> $env:GITHUB_OUTPUT
        echo "Created package: $packageName"
        
        # 验证文件
        if (Test-Path $packageName) {
            $size = (Get-Item $packageName).Length / 1MB
            echo "Package size: $([math]::Round($size, 2)) MB"
        } else {
            echo "Error: Package not created"
            exit 1
        }

    - name: 📝 Create Release Notes
      id: notes
      run: |
        $version = "${{ steps.package.outputs.version }}"
        $commitMsg = git log -1 --pretty=format:"%s"
        $author = git log -1 --pretty=format:"%an"
        
        $notes = @"
        ## 🚀 自动构建版本 $version
        
        ### 📋 更新内容
        **提交信息**: $commitMsg  
        **提交作者**: $author
        
        ### 📦 使用说明
        1. 下载 zip 文件并解压
        2. 双击 ``ReturnOrderGenerator.exe`` 运行
        3. 无需安装 .NET 运行时
        
        ### ℹ️ 构建信息
        - 构建时间: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
        - 提交哈希: ${{ github.sha }}
        - 系统要求: Windows 10/11 (64位)
        "@
        
        $notes | Out-File -FilePath release-notes.txt -Encoding UTF8
        echo "notes_file=release-notes.txt" >> $env:GITHUB_OUTPUT

    - name: 🎉 Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.package.outputs.version }}
        name: 自动构建 ${{ steps.package.outputs.version }}
        body_path: ${{ steps.notes.outputs.notes_file }}
        files: ${{ steps.package.outputs.package_name }}
        draft: false
        prerelease: true
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: ✅ Success Notification
      run: |
        $version = "${{ steps.package.outputs.version }}"
        $packageName = "${{ steps.package.outputs.package_name }}"
        echo "🎉 发布成功!"
        echo "版本: $version"
        echo "文件: $packageName"
        echo "链接: https://github.com/mazongYY/SF_P/releases/tag/$version"